2:I[20718,["3067","static/chunks/c24cc598-2cbcb84d2b01d13c.js","1244","static/chunks/1244-7dd87e3975005240.js","8059","static/chunks/app/(contents)/post/%5B...slug%5D/page-c3830913be8f137b.js"],""]
4:I[89203,["3067","static/chunks/c24cc598-2cbcb84d2b01d13c.js","1244","static/chunks/1244-7dd87e3975005240.js","8059","static/chunks/app/(contents)/post/%5B...slug%5D/page-c3830913be8f137b.js"],""]
5:I[5613,[],""]
7:I[31778,[],""]
8:I[25250,["5250","static/chunks/5250-f902508d1dda8599.js","7894","static/chunks/app/(contents)/layout-f321296cefda825a.js"],""]
3:Tc9b,<aside>📝 prev (previous)
1. 형용사 (시기적으로 이야기 중인 사건·사물) 이전[전]의, 먼젓번의 (=prior)
2. 형용사 (이야기 중인 시간) 바로 앞의 (=preceding)
</aside>

---

```tsx
import { useState } from 'react';

export default function Write() {
  const [post, setPost] = useState({
    title: '',
    tag: '',
  });

  const onChangeInputPost = (e) => {
    setPost({...post, [e.target.className]: e.target.value});
  };
  
    <div className="write-wrapper">
      <div className="write-editor">
        <div className="front-matter">
          <input
            className="title"
            type="text"
            onChange={onChangeInputPost}
          />
          <input
            className="tags"
            type="text"
            onChange={onChangeInputPost}
          />
      </div>
    </div>
  </div>
```

현재 코드도 나쁘지는 않다.\
하지만, React에서 state 실행은 동작함수가 여러 개 실행되더라도 업데이트를 **대기열, 임시 저장공간에 저장'만'** 되기 때문에 이전 상태, 즉 **최신 값을 보장하지 않는다.**

여러 개의 입력 필드가 있을 때, 동시에 여러 필드를 수정한다면, 최신 값을 고려하지 않을 수도 있다는 것이다.\
즉, **업데이트가 안될 수도** 있는 가능성이 있다는 것.

## prev 알아보기

```jsx
 const [state, setState] = useState(0);
  const sumAll = () => {
    setState(state + 1);
    setState(state + 2);
    setState(state + 3);
    setState(state + 4);
  };
  const sumAllWithPrevState = () => {
    setState((prev) => prev + 1);
    setState((prev) => prev + 2);
    setState((prev) => prev + 3);
    setState((prev) => prev + 4);
  };

  return (
    <>
      <div>결과는 : {state}</div>
      <button type='button' onClick={sumAll}>
        sumAll
      </button>
      <button type='button' onClick={sumAllWithPrevState}>
        sumAllWithPrevState
      </button>
    </>
  );
```

좋아보이는 [예시 코드](https://velog.io/@mh-yeo/React-prevState-in-setState)가 있어 [예제](https://otterbits.github.io/no-answer/)를 만들어보았다. (감사합니다.)

`sumAll` : 최신 값을 고려하지 않고 한다면, `4`가 나올 것이고,

`sumAllWithPrevState` : 최신 값을 고려한다면, `10`이 나올 것이다.

## 개선 코드

```tsx
import { useState } from 'react';

export default function Write() {
  const [post, setPost] = useState({
    title: '',
    tag: '',
  });

	  const onChangeInputPost = (e) => {
    setPost((prevState) => ({
      ...prevState,
      [e.target.className]: e.target.value,
    }));
  };

  
    <div className="write-wrapper">
      <div className="write-editor">
        <div className="front-matter">
          <input
            className="title"
            type="text"
            onChange={onChangeInputPost}
          />
          <input
            className="tags"
            type="text"
            onChange={onChangeInputPost}
          />
      </div>
    </div>
  </div>
```

때문에 이렇게 state 함수인 `setPost` 함수가 `prevState`를 통해 최신 값으로 업데이트하도록 개선하였다.

`💣`no-answer 하나 배웠다!6:["slug","front-end/react/the-difference-between-state-and-prev","c"]
9:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
a:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
b:{"display":"inline-block"}
c:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["FgzSv4WuCD0yrf_QyXK7E",[[["",{"children":["(contents)",{"children":["post",{"children":[["slug","front-end/react/the-difference-between-state-and-prev","c"],{"children":["__PAGE__?{\"slug\":[\"front-end\",\"react\",\"the-difference-between-state-and-prev\"]}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["(contents)",{"children":["post",{"children":[["slug","front-end/react/the-difference-between-state-and-prev","c"],{"children":["__PAGE__",{},["$L1",[["$","div",null,{"className":"post-wrapper","children":[["$","div",null,{"className":"post-header","children":[["$","div",null,{"className":"post-title","children":"…state와 (prev) ⇒ …prev의 차이"}],["$","div",null,{"className":"post-info","children":[["$","div",null,{"className":"post-tags","children":[["$","div","front-end",{"className":"post-tag","children":"front-end"}],["$","div","react",{"className":"post-tag","children":"react"}]]}],["$","div",null,{"className":"post-date","children":["🗓️"," ","Tue, March 26, 2024"]}]]}],["$","div",null,{"className":"post-author","children":["✍️ written by ",["$","strong",null,{"children":"otter"}]]}]]}],["$","div",null,{"className":"post-content","children":["$","$L2",null,{"content":"$3"}]}]]}],["$","$L4",null,{}]],null]]},["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(contents)","children","post","children","$6","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/na-log/_next/static/css/1a2bc1315f96f886.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(contents)","children","post","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,[["$","div",null,{"className":"page-header-wrapper","children":["$","header",null,{"className":"page-header","children":[["$","div",null,{"className":"home-section","children":["$","$L8",null,{"className":"link","href":"/","children":"na-log"}]}],["$","div",null,{"className":"category-section","children":[["$","$L8",null,{"className":"link","href":"/write","children":"write"}],["$","$L8",null,{"className":"link","href":"/about","children":"about"}]]}]]}]}],["$","main",null,{"className":"contents-wrapper","children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(contents)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]],null]]},[null,["$","html",null,{"lang":"ko","children":[["$","head",null,{"children":["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"}]}],["$","body",null,{"children":["$","div",null,{"className":"page-wrapper","children":[["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$9","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$a","children":"404"}],["$","div",null,{"style":"$b","children":["$","h2",null,{"style":"$c","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],["$","div",null,{"className":"footer-wrapper","children":["$","footer",null,{"className":"page-footer","children":"copyright © 2024 by NerdAnimals"}]}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/na-log/_next/static/css/dc2dab46305a2006.css","precedence":"next","crossOrigin":""}]],"$Ld"]]]]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"…state와 (prev) ⇒ …prev의 차이"}],["$","meta","3",{"name":"description","content":"react state에서 prev는 무엇을 담당해줄까요?"}],["$","meta","4",{"property":"og:title","content":"…state와 (prev) ⇒ …prev의 차이"}],["$","meta","5",{"property":"og:description","content":"react state에서 prev는 무엇을 담당해줄까요?"}],["$","meta","6",{"name":"twitter:card","content":"summary"}],["$","meta","7",{"name":"twitter:title","content":"…state와 (prev) ⇒ …prev의 차이"}],["$","meta","8",{"name":"twitter:description","content":"react state에서 prev는 무엇을 담당해줄까요?"}],["$","link","9",{"rel":"icon","href":"/na-log/favicon.ico","type":"image/x-icon","sizes":"64x64"}]]
1:null
