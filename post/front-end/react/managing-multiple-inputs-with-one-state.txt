2:I[20718,["3067","static/chunks/c24cc598-2cbcb84d2b01d13c.js","1244","static/chunks/1244-7dd87e3975005240.js","8059","static/chunks/app/(contents)/post/%5B...slug%5D/page-c3830913be8f137b.js"],""]
4:I[89203,["3067","static/chunks/c24cc598-2cbcb84d2b01d13c.js","1244","static/chunks/1244-7dd87e3975005240.js","8059","static/chunks/app/(contents)/post/%5B...slug%5D/page-c3830913be8f137b.js"],""]
5:I[5613,[],""]
7:I[31778,[],""]
8:I[25250,["5250","static/chunks/5250-f902508d1dda8599.js","7894","static/chunks/app/(contents)/layout-f321296cefda825a.js"],""]
3:T997,<aside>📝 state 하나에 많은 data들을 관리해보자!
</aside>

---

React 코드 작성 시, 한 컴포넌트 내에서 여러 개의 `input`이나 `textarea`로 여러 개의 `data`를 관리해야할 수도 있다.

```tsx
import { useState } from 'react';

export default function Write() {
	const [title, setTitle] = useState("");
	const [tag, setTag] = useState("");
  
  <div className="write-wrapper">
      <div className="write-editor">
        <div className="front-matter">
          <input
            className="title"
            type="text"
            onChange={(e)=> setTitle(e.target.value)}
          />
          <input
            className="tags"
            type="text"
            onChange={(e)=> setTag(e.target.value)}
          />
      </div>
    </div>
  </div>
```

글쓰기 페이지를 만드는데, 이런 경우 내가 input을 만들 때마다 State도 만들어줘야하는 번거로움이 생긴다.

개수가 제한이 됐더라도, 그 개수가 100개 이상이면?\
물론 그럴 일은 잘 없겠지만, html 코드는 둘째 치고 State 코드도 길어지고 번거로워질 것임이 틀림없다.

## 방법

`{}`, `object` 형태로 선언해주면 될 것이다.

또한, `spread` 문법으로 배열을 개별 요소로 분리후, 이벤트 객체(`e`)를 동적으로 선택해 업데이트하게 만든다.

## 개선 코드

```tsx
import { useState } from 'react';

export default function Write() {
  const [post, setPost] = useState({
    title: '',
    tag: '',
  });

  const onChangeInputPost = (e) => {
    setPost({...post, [e.target.className]: e.target.value});
  };

    <div className="write-wrapper">
      <div className="write-editor">
        <div className="front-matter">
          <input
            className="title"
            type="text"
            onChange={onChangeInputPost}
          />
          <input
            className="tags"
            type="text"
            onChange={onChangeInputPost}
          />
      </div>
    </div>
  </div>
```

```jsx
  const onChangeInputPost = (e) => {
	  const { className, value } = e.target;
	  setPost({...post, [className]: value});
	};
```

이렇게 `className`, `value`를 따로 변수에 지정해줘도 괜찮을 듯하다. 취향차이일 거 같다.

어찌됐든, `state`는 개선됐지만, state 실행 함수인 `setPost`가 조금 불안하다.

왜 [불안](the-difference-between-state-and-prev)할까?6:["slug","front-end/react/managing-multiple-inputs-with-one-state","c"]
9:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
a:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
b:{"display":"inline-block"}
c:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["OqsdoAvUtDZ4EE3fbW5u-",[[["",{"children":["(contents)",{"children":["post",{"children":[["slug","front-end/react/managing-multiple-inputs-with-one-state","c"],{"children":["__PAGE__?{\"slug\":[\"front-end\",\"react\",\"managing-multiple-inputs-with-one-state\"]}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["(contents)",{"children":["post",{"children":[["slug","front-end/react/managing-multiple-inputs-with-one-state","c"],{"children":["__PAGE__",{},["$L1",[["$","div",null,{"className":"post-wrapper","children":[["$","div",null,{"className":"post-header","children":[["$","div",null,{"className":"post-title","children":"하나의 state로 여러 개의 input/textarea 관리하기"}],["$","div",null,{"className":"post-info","children":[["$","div",null,{"className":"post-tags","children":[["$","div","front-end",{"className":"post-tag","children":"front-end"}],["$","div","react",{"className":"post-tag","children":"react"}]]}],["$","div",null,{"className":"post-date","children":["🗓️"," ","Tue, March 26, 2024"]}]]}],["$","div",null,{"className":"post-author","children":["✍️ written by ",["$","strong",null,{"children":"otter"}]]}]]}],["$","div",null,{"className":"post-content","children":["$","$L2",null,{"content":"$3"}]}]]}],["$","$L4",null,{}]],null]]},["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(contents)","children","post","children","$6","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/na-log/_next/static/css/1a2bc1315f96f886.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(contents)","children","post","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,[["$","div",null,{"className":"page-header-wrapper","children":["$","header",null,{"className":"page-header","children":[["$","div",null,{"className":"home-section","children":["$","$L8",null,{"className":"link","href":"/","children":"na-log"}]}],["$","div",null,{"className":"category-section","children":[["$","$L8",null,{"className":"link","href":"/write","children":"write"}],["$","$L8",null,{"className":"link","href":"/about","children":"about"}]]}]]}]}],["$","main",null,{"className":"contents-wrapper","children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","(contents)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]],null]]},[null,["$","html",null,{"lang":"ko","children":[["$","head",null,{"children":["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"}]}],["$","body",null,{"children":["$","div",null,{"className":"page-wrapper","children":[["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$9","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$a","children":"404"}],["$","div",null,{"style":"$b","children":["$","h2",null,{"style":"$c","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],["$","div",null,{"className":"footer-wrapper","children":["$","footer",null,{"className":"page-footer","children":"copyright © 2024 by NerdAnimals"}]}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/na-log/_next/static/css/dc2dab46305a2006.css","precedence":"next","crossOrigin":""}]],"$Ld"]]]]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"하나의 state로 여러 개의 input/textarea 관리하기"}],["$","meta","3",{"name":"description","content":"state 하나에 많은 data들을 관리해보자!"}],["$","meta","4",{"property":"og:title","content":"하나의 state로 여러 개의 input/textarea 관리하기"}],["$","meta","5",{"property":"og:description","content":"state 하나에 많은 data들을 관리해보자!"}],["$","meta","6",{"name":"twitter:card","content":"summary"}],["$","meta","7",{"name":"twitter:title","content":"하나의 state로 여러 개의 input/textarea 관리하기"}],["$","meta","8",{"name":"twitter:description","content":"state 하나에 많은 data들을 관리해보자!"}],["$","link","9",{"rel":"icon","href":"/na-log/favicon.ico","type":"image/x-icon","sizes":"64x64"}]]
1:null
